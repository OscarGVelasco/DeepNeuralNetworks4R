% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepNN_algorithmRegressionV3.3.r
\name{deepNeuralNetwork.build}
\alias{deepNeuralNetwork.build}
\title{Build the Neural Network structure and initial values.}
\usage{
deepNeuralNetwork.build(x, y, HidenLayerNeurons = c(4, 4),
  inputNeurons = 0, outputNeurons = 0, Ai = 0.25, traindata = data,
  drawDNN = FALSE, random.seed = NA, standarization = "r")
}
\arguments{
\item{x}{Numeric, complex, or logical vectors.}

\item{y}{Numeric, complex, or logical vectors.}

\item{HidenLayerNeurons}{A numeric vector representing the hidden layers. Each number specifies the number of neurons of the corresponding hidden layer.}

\item{inputNeurons}{Numeric.}

\item{outputNeurons}{Numeric.}

\item{Ai}{Numeric.}

\item{traindata}{Matrix.}

\item{drawDNN}{Boolean. TRUE draw a representation of the network using ggplot. Default=FALSE.}

\item{random.seed}{Numeric.}

\item{standarization}{Character or list. Standarization method to be use. If a list of features (corresponding to rows in the input matrix) is
supplied, a standarization feature-z-score is done. "r"=robust median z-score. "s"=standar mean z-score.}
}
\value{
A DeepNNModel object with initialized parameters as specified by the user.
}
\description{
`deepNeuralNetwork.build()` returns a DeepMMModel object which contains an initialized deep neural network model with the parameters specified by the user.
}
\details{
This function will create and initialize a deep neural network with a random gaussian distribution
the parameters specified by the user will be used to obtain the number of input neurons, number of
hidden layers and number of output neurons (which will depend on the number of variables that the model is intended to estimate).
The output of this function is intended to be used as the input object of the [deepNeuralNetwork.training] function.
}
\examples{
dnn.model <- deepNeuralNetwork.build(x=c(1,2,4,5),y=3, outputNeurons = 1,
                                     HidenLayerNeurons = c(30,10,3),traindata=data,
                                     random.seed = 1, drawDNN = 0)

\dontrun{
sum("a")
}
}
